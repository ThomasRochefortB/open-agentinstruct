{
    "one_shot_example": {
      "instruction": "Instruction:\n The following are examples of how to convert temperatures from Celsius to Fahrenheit. Study these examples, then apply the same pattern to solve the final problem.\n\nExample 1:\nQ: Convert 0°C to Fahrenheit.\nA: To convert from Celsius to Fahrenheit, I use the formula F = (C × 9/5) + 32.\nFor 0°C: F = (0 × 9/5) + 32 = 0 + 32 = 32°F\n\nExample 2:\nQ: Convert 100°C to Fahrenheit.\nA: To convert from Celsius to Fahrenheit, I use the formula F = (C × 9/5) + 32.\nFor 100°C: F = (100 × 9/5) + 32 = 180 + 32 = 212°F\n\nExample 3:\nQ: Convert 25°C to Fahrenheit.\nA: To convert from Celsius to Fahrenheit, I use the formula F = (C × 9/5) + 32.\nFor 25°C: F = (25 × 9/5) + 32 = 45 + 32 = 77°F\n\nExample 4:\nQ: Convert -10°C to Fahrenheit.\nA: To convert from Celsius to Fahrenheit, I use the formula F = (C × 9/5) + 32.\nFor -10°C: F = (-10 × 9/5) + 32 = -18 + 32 = 14°F\n\nExample 5:\nQ: Convert 37°C to Fahrenheit.\nA:",
      "answer": "Answer:\n To convert from Celsius to Fahrenheit, I use the formula F = (C × 9/5) + 32.\nFor 37°C: F = (37 × 9/5) + 32 = 66.6 + 32 = 98.6°F"
    },
    "agents": [
      {
        "name": "Mathematical Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply mathematical patterns from minimal examples. Your task is to generate instructions that present a series of examples demonstrating a consistent mathematical pattern, followed by a new problem that requires applying the same pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several example problems and solutions that follow a consistent mathematical pattern, concluding with a new problem to solve. Identify or create mathematical concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly worked examples that follow the same mathematical principle\n- Provide sufficient step-by-step reasoning in each example solution\n- Show variations or progressive complexity across examples\n- End with a new problem (without solution) that follows the same pattern\n- Be designed so that a reader could identify and apply the pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 worked examples following a pattern and a final problem to solve]\n\nAnswer:\n[Solution to the final problem that applies the pattern demonstrated in the examples]\n```"
      },
      {
        "name": "Coding Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply programming patterns from minimal examples. Your task is to generate instructions that present a series of code examples demonstrating a consistent programming pattern, followed by a new problem that requires applying the same pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several code problem-solution pairs that follow a consistent programming pattern, concluding with a new problem to solve. Identify or create programming concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly worked code examples that follow the same programming principle\n- Provide sufficient explanations for each code solution\n- Show variations or progressive complexity across examples\n- End with a new coding problem (without solution) that follows the same pattern\n- Be designed so that a reader could identify and apply the pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 worked code examples following a pattern and a final problem to solve]\n\nAnswer:\n[Solution code to the final problem that applies the pattern demonstrated in the examples]\n```"
      },
      {
        "name": "Logical Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply logical patterns from minimal examples. Your task is to generate instructions that present a series of logical problem-solution pairs demonstrating a consistent reasoning pattern, followed by a new problem that requires applying the same pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several logical problem-solution pairs that follow a consistent reasoning pattern, concluding with a new problem to solve. Identify or create logical reasoning concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly worked logical examples that follow the same reasoning principle\n- Provide sufficient step-by-step reasoning in each example solution\n- Show variations or progressive complexity across examples\n- End with a new logical problem (without solution) that follows the same pattern\n- Be designed so that a reader could identify and apply the pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 worked logical examples following a pattern and a final problem to solve]\n\nAnswer:\n[Solution to the final problem that applies the reasoning pattern demonstrated in the examples]\n```"
      },
      {
        "name": "Linguistic Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply linguistic patterns from minimal examples. Your task is to generate instructions that present a series of language problem-solution pairs demonstrating a consistent linguistic pattern, followed by a new problem that requires applying the same pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several linguistic problem-solution pairs that follow a consistent language pattern, concluding with a new problem to solve. Identify or create linguistic concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly worked linguistic examples that follow the same language principle\n- Provide sufficient explanations for each example solution\n- Show variations or progressive complexity across examples\n- End with a new linguistic problem (without solution) that follows the same pattern\n- Be designed so that a reader could identify and apply the pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 worked linguistic examples following a pattern and a final problem to solve]\n\nAnswer:\n[Solution to the final problem that applies the linguistic pattern demonstrated in the examples]\n```"
      },
      {
        "name": "Classification Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply classification patterns from minimal examples. Your task is to generate instructions that present a series of classification examples demonstrating a consistent categorization approach, followed by a new item that requires applying the same classification pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several classification examples that follow a consistent categorization pattern, concluding with a new item to classify. Identify or create classification concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly explained classification examples that follow the same categorization principle\n- Provide sufficient reasoning for why each example belongs to its category\n- Show variations or progressive complexity across examples\n- End with a new item (without classification) that follows the same pattern\n- Be designed so that a reader could identify and apply the classification pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 classification examples following a pattern and a final item to classify]\n\nAnswer:\n[Solution that classifies the final item by applying the pattern demonstrated in the examples]\n```"
      },
      {
        "name": "Analogy Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply analogical patterns from minimal examples. Your task is to generate instructions that present a series of analogy problem-solution pairs demonstrating a consistent relationship pattern, followed by a new analogy that requires applying the same pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several analogy problem-solution pairs that follow a consistent relationship pattern, concluding with a new analogy to complete. Identify or create analogical concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly worked analogy examples that follow the same relationship principle\n- Provide sufficient explanations for why each analogy holds\n- Show variations or progressive complexity across examples\n- End with a new analogy problem (without solution) that follows the same pattern\n- Be designed so that a reader could identify and apply the analogical pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 worked analogy examples following a pattern and a final analogy to complete]\n\nAnswer:\n[Solution to the final analogy that applies the relationship pattern demonstrated in the examples]\n```"
      },
      {
        "name": "Pattern Recognition Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and continue sequences or patterns from minimal examples. Your task is to generate instructions that present a series of pattern examples demonstrating a consistent rule, followed by a new sequence that requires applying the same pattern recognition.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several pattern examples that follow a consistent rule, concluding with a new sequence to continue. Identify or create pattern concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly explained pattern examples that follow the same rule\n- Provide sufficient reasoning for how each pattern works\n- Show variations or progressive complexity across examples\n- End with a new pattern (without completion) that follows the same rule\n- Be designed so that a reader could identify and apply the pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 pattern examples following a rule and a final pattern to continue]\n\nAnswer:\n[Solution that continues the final pattern by applying the rule demonstrated in the examples]\n```"
      },
      {
        "name": "Problem-Solving Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply problem-solving strategies from minimal examples. Your task is to generate instructions that present a series of problem-solution pairs demonstrating a consistent solution approach, followed by a new problem that requires applying the same strategy.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several problem-solution pairs that follow a consistent problem-solving strategy, concluding with a new problem to solve. Identify or create problem-solving concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly worked problem examples that follow the same solution strategy\n- Provide sufficient step-by-step reasoning in each example solution\n- Show variations or progressive complexity across examples\n- End with a new problem (without solution) that follows the same pattern\n- Be designed so that a reader could identify and apply the problem-solving strategy with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 worked problem examples following a strategy and a final problem to solve]\n\nAnswer:\n[Solution to the final problem that applies the strategy demonstrated in the examples]\n```"
      },
      {
        "name": "Technical Domain Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply domain-specific technical patterns from minimal examples. Your task is to generate instructions that present a series of technical problem-solution pairs demonstrating a consistent domain-specific approach, followed by a new problem that requires applying the same technical pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several technical domain-specific problem-solution pairs that follow a consistent approach, concluding with a new problem to solve. Identify or create technical concepts from the content that could form the basis of a domain-specific pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly worked technical examples that follow the same domain principle\n- Provide sufficient technical explanations for each example solution\n- Show variations or progressive complexity across examples\n- End with a new technical problem (without solution) that follows the same pattern\n- Be designed so that a reader could identify and apply the technical pattern with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 worked technical examples following a domain pattern and a final problem to solve]\n\nAnswer:\n[Solution to the final problem that applies the technical domain pattern demonstrated in the examples]\n```"
      },
      {
        "name": "Transformation Few-Shot Instruction Agent",
        "system_prompt": "Create few-shot reasoning instructions that test the ability to recognize and apply transformation patterns from minimal examples. Your task is to generate instructions that present a series of input-output transformations demonstrating a consistent rule, followed by a new input that requires applying the same transformation pattern.",
        "user_prompt_template": "Create a few-shot reasoning instruction from this content:\n\n{text}\n\nYour task is to generate an instruction that includes several input-output transformation examples that follow a consistent rule, concluding with a new input to transform. Identify or create transformation concepts from the content that could form the basis of a pattern-recognition task.\n\nYour instruction should:\n- Include 4-5 clearly explained transformation examples that follow the same rule\n- Provide sufficient reasoning for how each transformation works\n- Show variations or progressive complexity across examples\n- End with a new input (without transformation) that follows the same pattern\n- Be designed so that a reader could identify and apply the transformation with minimal direct explanation\n\nFormat your response as:\n```\nInstruction:\n[Clear instruction with 4-5 transformation examples following a rule and a final input to transform]\n\nAnswer:\n[Solution that transforms the final input by applying the rule demonstrated in the examples]\n```"
      }
    ]
}
